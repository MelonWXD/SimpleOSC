package com.dongua.simpleosc.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.dongua.simpleosc.bean.PostBean;
import com.dongua.simpleosc.bean.SubBean;
import com.dongua.simpleosc.bean.TweetBean;

import com.dongua.simpleosc.db.PostBeanDao;
import com.dongua.simpleosc.db.SubBeanDao;
import com.dongua.simpleosc.db.TweetBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig postBeanDaoConfig;
    private final DaoConfig subBeanDaoConfig;
    private final DaoConfig tweetBeanDaoConfig;

    private final PostBeanDao postBeanDao;
    private final SubBeanDao subBeanDao;
    private final TweetBeanDao tweetBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        postBeanDaoConfig = daoConfigMap.get(PostBeanDao.class).clone();
        postBeanDaoConfig.initIdentityScope(type);

        subBeanDaoConfig = daoConfigMap.get(SubBeanDao.class).clone();
        subBeanDaoConfig.initIdentityScope(type);

        tweetBeanDaoConfig = daoConfigMap.get(TweetBeanDao.class).clone();
        tweetBeanDaoConfig.initIdentityScope(type);

        postBeanDao = new PostBeanDao(postBeanDaoConfig, this);
        subBeanDao = new SubBeanDao(subBeanDaoConfig, this);
        tweetBeanDao = new TweetBeanDao(tweetBeanDaoConfig, this);

        registerDao(PostBean.class, postBeanDao);
        registerDao(SubBean.class, subBeanDao);
        registerDao(TweetBean.class, tweetBeanDao);
    }
    
    public void clear() {
        postBeanDaoConfig.clearIdentityScope();
        subBeanDaoConfig.clearIdentityScope();
        tweetBeanDaoConfig.clearIdentityScope();
    }

    public PostBeanDao getPostBeanDao() {
        return postBeanDao;
    }

    public SubBeanDao getSubBeanDao() {
        return subBeanDao;
    }

    public TweetBeanDao getTweetBeanDao() {
        return tweetBeanDao;
    }

}
